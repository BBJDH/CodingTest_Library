
/*
2xn 타일링

문제를 거꾸로 생각해본다면

제일 오른쪽 끝 타일의 경우의 수만 생각해보자 크기는 상관없다
******--
******--
어떤 임의의 타일 갯수가 와도 위와같이 1x2로 두칸을 먹는 타일의 경우의 수와
*******|
*******|
제일 끝 타일이 2x1인 타일 한장이 배치되는 두가지 경우의 수만이 존재한다

******--
******--
이 경우의 수는 n-2공간의 경우의수와 일치하고
*******|
*******|
이 경우의 수는 n-1공간의 경우의수와 일치한다
때문에
n공간 경우의 수 = [n-2] + [n-1] 가 성립한다

n으로부터 역으로 쪼개서 올라가면 n =1, 2 인경우를 알아야하는데
우리는 n이 1일때 1가지 2일때 2가지라는 값을 알고있기때문에
이와같은 누적 계산이 가능하다

*/


#include<iostream>

using namespace std;

int DP[1001]{};

int main()
{
	DP[1] = 1;
	DP[2] = 2;
	int TileSize = 0;

	scanf("%d", &TileSize);

	for (int i = 3; i <= TileSize; i++)
	{
		DP[i] = (DP[i - 1] + DP[i - 2]) % 10007;
	}
	printf("%d", DP[TileSize]);

	return 0;
}
